{"ast":null,"code":"import{configureStore,createSlice}from'@reduxjs/toolkit';const authSlice=createSlice({name:\"auth\",initialState:{isLoggedIn:false,user:null,isLoading:true,// Add loading state\nisInitialized:false// Track if initial auth check is complete\n},reducers:{login(state,action){state.isLoggedIn=true;state.user=action.payload||null;state.isLoading=false;state.isInitialized=true;},logout(state){localStorage.removeItem(\"userId\");state.isLoggedIn=false;state.user=null;state.isLoading=false;state.isInitialized=true;},setLoading(state,action){state.isLoading=action.payload;},setInitialized(state,action){state.isInitialized=action.payload;},setUser(state,action){state.user=action.payload;}}});export const authActions=authSlice.actions;export const store=configureStore({reducer:authSlice.reducer});","map":{"version":3,"names":["configureStore","createSlice","authSlice","name","initialState","isLoggedIn","user","isLoading","isInitialized","reducers","login","state","action","payload","logout","localStorage","removeItem","setLoading","setInitialized","setUser","authActions","actions","store","reducer"],"sources":["D:/updated_blog/Blog_App/frontend/src/store/index.js"],"sourcesContent":["import {configureStore, createSlice} from '@reduxjs/toolkit'\n\nconst authSlice = createSlice({\n    name:\"auth\",\n    initialState:{\n        isLoggedIn: false,\n        user: null,\n        isLoading: true, // Add loading state\n        isInitialized: false // Track if initial auth check is complete\n    },\n    reducers:{\n        login(state, action){\n            state.isLoggedIn = true;\n            state.user = action.payload || null;\n            state.isLoading = false;\n            state.isInitialized = true;\n        },\n        logout(state) {\n            localStorage.removeItem(\"userId\");\n            state.isLoggedIn = false;\n            state.user = null;\n            state.isLoading = false;\n            state.isInitialized = true;\n        },\n        setLoading(state, action) {\n            state.isLoading = action.payload;\n        },\n        setInitialized(state, action) {\n            state.isInitialized = action.payload;\n        },\n        setUser(state, action) {\n            state.user = action.payload;\n        }\n    },\n})\n\nexport const authActions = authSlice.actions\n\nexport const store = configureStore({\n    reducer:authSlice.reducer\n})"],"mappings":"AAAA,OAAQA,cAAc,CAAEC,WAAW,KAAO,kBAAkB,CAE5D,KAAM,CAAAC,SAAS,CAAGD,WAAW,CAAC,CAC1BE,IAAI,CAAC,MAAM,CACXC,YAAY,CAAC,CACTC,UAAU,CAAE,KAAK,CACjBC,IAAI,CAAE,IAAI,CACVC,SAAS,CAAE,IAAI,CAAE;AACjBC,aAAa,CAAE,KAAM;AACzB,CAAC,CACDC,QAAQ,CAAC,CACLC,KAAKA,CAACC,KAAK,CAAEC,MAAM,CAAC,CAChBD,KAAK,CAACN,UAAU,CAAG,IAAI,CACvBM,KAAK,CAACL,IAAI,CAAGM,MAAM,CAACC,OAAO,EAAI,IAAI,CACnCF,KAAK,CAACJ,SAAS,CAAG,KAAK,CACvBI,KAAK,CAACH,aAAa,CAAG,IAAI,CAC9B,CAAC,CACDM,MAAMA,CAACH,KAAK,CAAE,CACVI,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC,CACjCL,KAAK,CAACN,UAAU,CAAG,KAAK,CACxBM,KAAK,CAACL,IAAI,CAAG,IAAI,CACjBK,KAAK,CAACJ,SAAS,CAAG,KAAK,CACvBI,KAAK,CAACH,aAAa,CAAG,IAAI,CAC9B,CAAC,CACDS,UAAUA,CAACN,KAAK,CAAEC,MAAM,CAAE,CACtBD,KAAK,CAACJ,SAAS,CAAGK,MAAM,CAACC,OAAO,CACpC,CAAC,CACDK,cAAcA,CAACP,KAAK,CAAEC,MAAM,CAAE,CAC1BD,KAAK,CAACH,aAAa,CAAGI,MAAM,CAACC,OAAO,CACxC,CAAC,CACDM,OAAOA,CAACR,KAAK,CAAEC,MAAM,CAAE,CACnBD,KAAK,CAACL,IAAI,CAAGM,MAAM,CAACC,OAAO,CAC/B,CACJ,CACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAO,WAAW,CAAGlB,SAAS,CAACmB,OAAO,CAE5C,MAAO,MAAM,CAAAC,KAAK,CAAGtB,cAAc,CAAC,CAChCuB,OAAO,CAACrB,SAAS,CAACqB,OACtB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}