{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    isLoggedIn: false,\n    user: null,\n    isLoading: true,\n    // Add loading state\n    isInitialized: false // Track if initial auth check is complete\n  },\n  reducers: {\n    login(state, action) {\n      state.isLoggedIn = true;\n      state.user = action.payload || null;\n      state.isLoading = false;\n      state.isInitialized = true;\n    },\n    logout(state) {\n      localStorage.removeItem(\"userId\");\n      state.isLoggedIn = false;\n      state.user = null;\n      state.isLoading = false;\n      state.isInitialized = true;\n    },\n    setLoading(state, action) {\n      state.isLoading = action.payload;\n    },\n    setInitialized(state, action) {\n      state.isInitialized = action.payload;\n    },\n    setUser(state, action) {\n      state.user = action.payload;\n    }\n  }\n});\nexport const authActions = authSlice.actions;\nexport const store = configureStore({\n  reducer: authSlice.reducer\n});","map":{"version":3,"names":["configureStore","createSlice","authSlice","name","initialState","isLoggedIn","user","isLoading","isInitialized","reducers","login","state","action","payload","logout","localStorage","removeItem","setLoading","setInitialized","setUser","authActions","actions","store","reducer"],"sources":["D:/updated_blog/Blog_App/frontend/src/store/index.js"],"sourcesContent":["import {configureStore, createSlice} from '@reduxjs/toolkit'\n\nconst authSlice = createSlice({\n    name:\"auth\",\n    initialState:{\n        isLoggedIn: false,\n        user: null,\n        isLoading: true, // Add loading state\n        isInitialized: false // Track if initial auth check is complete\n    },\n    reducers:{\n        login(state, action){\n            state.isLoggedIn = true;\n            state.user = action.payload || null;\n            state.isLoading = false;\n            state.isInitialized = true;\n        },\n        logout(state) {\n            localStorage.removeItem(\"userId\");\n            state.isLoggedIn = false;\n            state.user = null;\n            state.isLoading = false;\n            state.isInitialized = true;\n        },\n        setLoading(state, action) {\n            state.isLoading = action.payload;\n        },\n        setInitialized(state, action) {\n            state.isInitialized = action.payload;\n        },\n        setUser(state, action) {\n            state.user = action.payload;\n        }\n    },\n})\n\nexport const authActions = authSlice.actions\n\nexport const store = configureStore({\n    reducer:authSlice.reducer\n})"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,WAAW,QAAO,kBAAkB;AAE5D,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IACTC,UAAU,EAAE,KAAK;IACjBC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,IAAI;IAAE;IACjBC,aAAa,EAAE,KAAK,CAAC;EACzB,CAAC;EACDC,QAAQ,EAAC;IACLC,KAAKA,CAACC,KAAK,EAAEC,MAAM,EAAC;MAChBD,KAAK,CAACN,UAAU,GAAG,IAAI;MACvBM,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO,IAAI,IAAI;MACnCF,KAAK,CAACJ,SAAS,GAAG,KAAK;MACvBI,KAAK,CAACH,aAAa,GAAG,IAAI;IAC9B,CAAC;IACDM,MAAMA,CAACH,KAAK,EAAE;MACVI,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;MACjCL,KAAK,CAACN,UAAU,GAAG,KAAK;MACxBM,KAAK,CAACL,IAAI,GAAG,IAAI;MACjBK,KAAK,CAACJ,SAAS,GAAG,KAAK;MACvBI,KAAK,CAACH,aAAa,GAAG,IAAI;IAC9B,CAAC;IACDS,UAAUA,CAACN,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACJ,SAAS,GAAGK,MAAM,CAACC,OAAO;IACpC,CAAC;IACDK,cAAcA,CAACP,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACH,aAAa,GAAGI,MAAM,CAACC,OAAO;IACxC,CAAC;IACDM,OAAOA,CAACR,KAAK,EAAEC,MAAM,EAAE;MACnBD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;IAC/B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GAAGlB,SAAS,CAACmB,OAAO;AAE5C,OAAO,MAAMC,KAAK,GAAGtB,cAAc,CAAC;EAChCuB,OAAO,EAACrB,SAAS,CAACqB;AACtB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}